[{"title":"Cloudera CDH 部署实践","date":"2016-12-06T02:21:46.000Z","path":"2016/12/06/Cloudera-CDH-deploy/","text":"1.准备1.1.系统和软件版本要求 CentOS 7 x86_64 Cloudera Manager 5.8.2 CDH 5.8.2, Parcel Python 2.7 1.2.集群设备列表 IP 角色 主机名 192.168.8.125 CDH本地仓库, Cloudera Manager Server cdh.server 192.168.8.241 Cloudera Manager Agent, cluster-master cdh241.kbw 192.168.8.242 Cloudera Manager Agent, cluster-slave cdh242.kbw 192.168.8.243 Cloudera Manager Agent, cluster-slave cdh243.kbw 192.168.8.244 Cloudera Manager Agent, cluster-slave cdh244.kbw 1.3.服务器初始化1.3.1.修改主机名(root@all)12# cdh241.kbw 是主机名，ip与主机名对应关系见1.2hostnamectl set-hostname &lt;主机名&gt; 1.3.2.修改/etc/hosts文件(root@all)1234567cat &lt;&lt; EOF &gt;&gt; /etc/hosts192.168.8.125 cdh.server192.168.8.241 cdh241.kbw192.168.8.242 cdh242.kbw192.168.8.243 cdh243.kbw192.168.8.244 cdh244.kbwEOF 1.3.3.关闭SELinux(root@all)修改/etc/selinux/config文件,将SELINUX=enforcing改为SELINUX=disabled,重启机器(reboot)即可. 1.3.4.配置SSH免用户密码登录(root@cdh.server)生成密钥对12# 密码设置后后续会用到ssh-keygen -f ~/.ssh/id_rsa -P &lt;密码&gt; 生成的文件如下：1234567[root@cdh241 ~]# tree ~/.ssh//root/.ssh/├── authorized_keys├── id_rsa└── id_rsa.pub0 directories, 3 files 将生成的公钥（id_rsa.pub）追加到所有服务器root用户的~/.ssh/authorized_keys文件后面12# 主机名列表见1.2，该操作需要对应服务器的root用户密码ssh-copy-id root@&lt;主机名&gt; 测试是否能免用户密码登录：12# 主机名列表见1.2，该操作需要生成密钥对时指定的密码ssh root@&lt;主机名&gt; 见到如下提示则成功配置免用户密码登录12Enter passphrase for key &apos;/root/.ssh/id_rsa&apos;: Last login: Wed Oct 12 15:37:53 2016 from cdh241.kbw 1.3.5.开启ntp服务以同步时间(root@all)1234sudo yum install ntp ntpdate -ysudo systemctl is-enabled ntpdsudo systemctl enable ntpdsudo systemctl start ntpd 2.搭建CDH本地仓库(someone@cdh.server)2.1.下载仓库文件压缩包和Parcel包仓库：请到该页面选择合适的版本下载。1wget http://archive.cloudera.com/cm5/repo-as-tarball/5.8.2/cm5.8.2-centos7.tar.gz Parcel:请到该页面选择合适的版本下载。1wget http://archive.cloudera.com/cdh5/parcels/5.8.2/CDH-5.8.2-1.cdh5.8.2.p0.3-el7.parcel PS: wget下载较慢，可在windows下面使用下载工具下载，下载完成后需要校验md5，确认文件是官方原始文件。 2.2.搭建静态文件服务器安装依赖库12sudo yum install -y pcre-devel bzip2-devel zlib-devel lrzsz wgetsudo yum groupinstall -y &quot;Development Tools&quot; 选用nginx作为静态文件服务器。12345# 当前目录为/home/wood, --prefix的值请对应修改wget https://nginx.org/download/nginx-1.11.4.tar.gz \\&amp;&amp; tar zxvf nginx-1.11.4.tar.gz \\&amp;&amp; cd nginx-1.11.4 \\&amp;&amp; ./configure --prefix=/home/wood/nginx 编译安装1make &amp;&amp; make install 修改配置nginx配置文件，配置文件路径为/home/wood/nginx/conf/nginx.conf, 以下是修改完成后新旧文件内容的对比。 123456789101112131415161718192021wood➜~/nginx/conf» diff -u nginx.conf.default nginx.conf --- nginx.conf.default 2016-10-12 16:14:36.897081256 +0800+++ nginx.conf 2016-10-12 16:21:28.511996732 +0800@@ -33,7 +33,7 @@ #gzip on; server &#123;- listen 80;+ listen 8090; server_name localhost; #charset koi8-r;@@ -43,6 +43,8 @@ location / &#123; root html; index index.html index.htm;+ autoindex on;+ limit_rate 3m; &#125; #error_page 404 /404.html; 启动nginx 1/home/wood/nginx/sbin/nginx 2.3.搭建cloudera-manager本地仓库安装依赖程序1sudo yum -y install createrepo 进入nginx默认的root目录1cd /home/wood/nginx/html 使用rz命令将下载好的`cm5.8.2-centos7.tar.gz上传到当前目录。 12# 解压tar zxf cm5.8.2-centos7.tar.gz 生成repodata12cd /home/wood/nginx/html/cm/5 &amp;&amp; rm -rf repodatacreaterepo . 测试访问1curl http://cdh.server:8090/cm/5/repodata/repomd.xml 结果如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;repomd xmlns=\"http://linux.duke.edu/metadata/repo\" xmlns:rpm=\"http://linux.duke.edu/metadata/rpm\"&gt; &lt;revision&gt;1476671787&lt;/revision&gt;&lt;data type=\"filelists\"&gt; &lt;checksum type=\"sha256\"&gt;7c0594eee7c83fe84411be849b50333b9ced8b5acc6fabd2c3531b6905aedd9e&lt;/checksum&gt; &lt;open-checksum type=\"sha256\"&gt;b065566fc58d1a21b934704249fd331a0de205809a92a0e27483c4296584e12a&lt;/open-checksum&gt; &lt;location href=\"repodata/7c0594eee7c83fe84411be849b50333b9ced8b5acc6fabd2c3531b6905aedd9e-filelists.xml.gz\"/&gt; &lt;timestamp&gt;1476671790&lt;/timestamp&gt; &lt;size&gt;118534&lt;/size&gt; &lt;open-size&gt;1840692&lt;/open-size&gt;&lt;/data&gt;&lt;data type=\"primary\"&gt; &lt;checksum type=\"sha256\"&gt;81f97c54a02b6f9e98262a7d3762cb1d22561c891205c02cc831de882f849c2f&lt;/checksum&gt; &lt;open-checksum type=\"sha256\"&gt;45ad1f65d93b735a8b19fba4e09f3259566b5a2b5cde9bf11337ca7fb059860c&lt;/open-checksum&gt; &lt;location href=\"repodata/81f97c54a02b6f9e98262a7d3762cb1d22561c891205c02cc831de882f849c2f-primary.xml.gz\"/&gt; &lt;timestamp&gt;1476671790&lt;/timestamp&gt; &lt;size&gt;4192&lt;/size&gt; &lt;open-size&gt;25756&lt;/open-size&gt;&lt;/data&gt;&lt;data type=\"primary_db\"&gt; &lt;checksum type=\"sha256\"&gt;3628c6bbd4609873ec449834d4c686151971744ecc4ce15a757db51202d784eb&lt;/checksum&gt; &lt;open-checksum type=\"sha256\"&gt;7706b44b6136bdd38e78fdbef4e3129b06f6d0034c354354f95f2c93a8803db7&lt;/open-checksum&gt; &lt;location href=\"repodata/3628c6bbd4609873ec449834d4c686151971744ecc4ce15a757db51202d784eb-primary.sqlite.bz2\"/&gt; &lt;timestamp&gt;1476671792&lt;/timestamp&gt; &lt;database_version&gt;10&lt;/database_version&gt; &lt;size&gt;11260&lt;/size&gt; &lt;open-size&gt;58368&lt;/open-size&gt;&lt;/data&gt;&lt;data type=\"other_db\"&gt; &lt;checksum type=\"sha256\"&gt;6991f7f10f2d94e9aae27f671dadaae8c632fb0d9c85577e545df02a0cf49baf&lt;/checksum&gt; &lt;open-checksum type=\"sha256\"&gt;77eaab4e90163d6c1121357d0655d73547a33a770ecb07c1450fda55c4027109&lt;/open-checksum&gt; &lt;location href=\"repodata/6991f7f10f2d94e9aae27f671dadaae8c632fb0d9c85577e545df02a0cf49baf-other.sqlite.bz2\"/&gt; &lt;timestamp&gt;1476671790&lt;/timestamp&gt; &lt;database_version&gt;10&lt;/database_version&gt; &lt;size&gt;1068&lt;/size&gt; &lt;open-size&gt;6144&lt;/open-size&gt;&lt;/data&gt;&lt;data type=\"other\"&gt; &lt;checksum type=\"sha256\"&gt;5fe2db0dc10ee44d6e9d0c76174c158e4dfddd9bd9b0a654bb373c679e7c8af5&lt;/checksum&gt; &lt;open-checksum type=\"sha256\"&gt;3378327d9a7c9d21b9c6d968e8c2cd45c308967d5c63608008604819d48385ed&lt;/open-checksum&gt; &lt;location href=\"repodata/5fe2db0dc10ee44d6e9d0c76174c158e4dfddd9bd9b0a654bb373c679e7c8af5-other.xml.gz\"/&gt; &lt;timestamp&gt;1476671790&lt;/timestamp&gt; &lt;size&gt;598&lt;/size&gt; &lt;open-size&gt;1466&lt;/open-size&gt;&lt;/data&gt;&lt;data type=\"filelists_db\"&gt; &lt;checksum type=\"sha256\"&gt;144231f2fa2fdf958fe6af83266883c96ddaf8b407d9e69dd0d63da8cb749054&lt;/checksum&gt; &lt;open-checksum type=\"sha256\"&gt;6be40181133a0948a69ba75d4c145f948e6547f21f13c132b1321a1b6cd29693&lt;/open-checksum&gt; &lt;location href=\"repodata/144231f2fa2fdf958fe6af83266883c96ddaf8b407d9e69dd0d63da8cb749054-filelists.sqlite.bz2\"/&gt; &lt;timestamp&gt;1476671791&lt;/timestamp&gt; &lt;database_version&gt;10&lt;/database_version&gt; &lt;size&gt;118670&lt;/size&gt; &lt;open-size&gt;735232&lt;/open-size&gt;&lt;/data&gt;&lt;/repomd&gt; 2.4.搭建parcel仓库进入nginx默认的root目录1cd /home/wood/nginx/html 创建parcel目录并进入1mkdir parcel &amp;&amp; cd parcel 使用rz命令上传CDH-5.8.2-1.cdh5.8.2.p0.3-el7.parcel文件到当前目录 下载对应版本的manifest.json1wget http://archive.cloudera.com/cdh5/parcels/5.8.2/manifest.json 3.安装Cloudera Manager(someone@cdh.server)3.1.编写repo文件1234567cat &lt;&lt; EOF &gt; cloudera-manager.repo[cloudera-manager]name = Cloudera Manager, Version 5.8.2baseurl = http://192.168.8.125:8090/cm/5/gpgkey = http://192.168.8.125:8090/cm/RPM-GPG-KEY-clouderagpgcheck = 1EOF 3.2.使用repo文件12sudo cp cloudera-manager.repo /etc/yum.repos.dsudo yum makecache 3.3.下载自动安装程序1wget https://archive.cloudera.com/cm5/installer/latest/cloudera-manager-installer.bin 3.4.赋予安装程序可执行权限1chmod u+x cloudera-manager-installer.bin 3.5.安装1sudo ./cloudera-manager-installer.bin --skip_repo_package=1 3.6.登录管理页面1234http://cdh.server:7180/用户名：admin密码：admin","tags":[{"name":"Cloudera CDH","slug":"Cloudera-CDH","permalink":"http://musicwood.github.io/tags/Cloudera-CDH/"},{"name":"Hadoop","slug":"Hadoop","permalink":"http://musicwood.github.io/tags/Hadoop/"},{"name":"Spark","slug":"Spark","permalink":"http://musicwood.github.io/tags/Spark/"}]}]